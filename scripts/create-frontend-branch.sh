#!/bin/bash

# Script pour cr√©er une branche frontend pour une fonctionnalit√©
# Usage: ./scripts/create-frontend-branch.sh <nom-fonctionnalit√©>

set -e

FEATURE_NAME=$1

if [ -z "$FEATURE_NAME" ]; then
    echo "‚ùå Usage: ./scripts/create-frontend-branch.sh <nom-fonctionnalit√©>"
    echo ""
    echo "Exemples:"
    echo "  ./scripts/create-frontend-branch.sh auth"
    echo "  ./scripts/create-frontend-branch.sh passwords" 
    echo "  ./scripts/create-frontend-branch.sh profile"
    echo "  ./scripts/create-frontend-branch.sh security"
    exit 1
fi

echo "üé® CR√âATION BRANCHE FRONTEND"
echo "==========================="
echo "Fonctionnalit√© : $FEATURE_NAME"
echo ""

# V√©rifier qu'on est dans le bon r√©pertoire
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå Ce script doit √™tre ex√©cut√© depuis la racine du projet"
    exit 1
fi

# Aller sur dev et r√©cup√©rer les derni√®res mises √† jour
echo "üì• R√©cup√©ration des derni√®res mises √† jour sur dev..."
git checkout dev
git pull origin dev

# Cr√©er et basculer sur la nouvelle branche
BRANCH_NAME="feature/${FEATURE_NAME}-frontend"
echo "üåø Cr√©ation de la branche $BRANCH_NAME..."
git checkout -b $BRANCH_NAME

# Pousser la branche vers le remote
echo "üöÄ Push de la branche vers origin..."
git push -u origin $BRANCH_NAME

echo ""
echo "‚úÖ Branche $BRANCH_NAME cr√©√©e et activ√©e !"
echo ""
echo "üìã Prochaines √©tapes :"
echo "  1. Consulte docs/FRONTEND-TODO.md pour tes t√¢ches"
echo "  2. Commence le d√©veloppement"
echo "  3. Fais des commits r√©guliers :"
echo "     git commit -m 'feat($FEATURE_NAME): description'"
echo "  4. Pousse tes commits :"
echo "     git push origin $BRANCH_NAME"
echo ""
echo "üìä Pour suivre tes progr√®s : ./scripts/track-progress.sh"